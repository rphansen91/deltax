{"version":3,"sources":["lib.js"],"names":["createAction","type","fn","v","builder","isType","t","case","cb","createAsyncAction","loading","success","failure","thunk","payload","Promise","resolve","then","dispatch","res","catch","err","reducer","createReducer","_","error","data","message","handleAction","actions","i","exec","initial","state","Object","assign"],"mappings":";AAqDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArDA,IAAMA,EAAe,QAAA,aAAA,SAACC,GAAMC,IAAAA,EAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,SAAA,GAAKC,OAAAA,GACrCC,EAAU,WAAc,MAAA,CACnBF,QAAAA,EADmB,WAAA,EAAA,WAE5BD,KAAAA,IAGII,EAAS,SAAA,GAAKC,OAAAA,IAAML,GASnBG,OAPCG,EAAAA,KAAO,WAACC,IAAAA,EAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,SAAA,GAAKL,OAAAA,GAAO,MAAA,CACzB,KAAA,WAAUK,OAAAA,EAAV,WAAA,EAAA,YACNH,OAAAA,IAGMA,EAAAA,OAASA,EACTJ,EAAAA,KAAOA,EACRG,GAGIK,EAAoB,QAAA,kBAAA,SAACR,GAAMC,IAAAA,EAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,SAAA,GAAKC,OAAAA,GAC1CO,EAAUV,EAAgBC,EAAhC,YACMU,EAAUX,EAAgBC,EAAhC,YACMW,EAAUZ,EAAgBC,EAAhC,YACMY,EAAQ,WAAIC,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAJ,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAAgB,OAAA,SAAY,GAGjCC,OAFEL,EAAAA,EAAWI,WAAAA,EAAAA,IAEbC,QAAQC,UACZC,KAAK,WAAMf,OAAAA,EAAMY,WAAAA,EAAAA,KACjBG,KAAK,SAAA,GAAOC,OAAAA,EAASP,EAAQQ,MAC7BC,MAAM,SAAA,GAAOF,OAAAA,EAASN,EAAQS,QAa5BR,OAVDS,EAAAA,QAAUC,EAAc,GAAI,CAChCb,EAAQH,KAAK,SAACiB,EAAGV,GAAa,MAAA,CAAEJ,SAAS,EAAMe,MAAO,GAAIC,KAAM,QAChEf,EAAQJ,KAAK,SAACiB,EAAGE,GAAU,MAAA,CAAEhB,SAAS,EAAOe,MAAO,GAAIC,KAA7B,KAC3Bd,EAAQL,KAAK,SAACiB,EAAGH,GAAS,MAAA,CAAEX,SAAS,EAAOe,MAAOJ,GAAOA,EAAIM,aAG1DjB,EAAAA,QAAUA,EACVC,EAAAA,QAAUA,EACVC,EAAAA,QAAUA,EAETC,GAGIe,EAAe,QAAA,aAAA,WAAIC,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAJ,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAAgB,OAAA,WAAqB,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAlB5B,EAAAA,EAAAA,KAAMa,EAAAA,EAAAA,QAC9C,IAAA,IAAMgB,KAAKD,EAAS,CACEA,IAAAA,EAAAA,EAAQC,IAAM,GAA/BzB,EAAAA,EAAAA,OAAQ0B,EAAAA,EAAAA,KACZ1B,GAAAA,EAAOJ,GACF8B,OAAAA,EAAKjB,MAKLS,EAAgB,QAAA,cAAA,SAACS,EAASH,GAC9B,OAAA,WAACI,IAAAA,EAAQD,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAAA,EAA6B,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAlB/B,EAAAA,EAAAA,KAAMa,EAAAA,EAAAA,QAC1B,IAAA,IAAMgB,KAAKD,EAAS,CACEA,IAAAA,EAAAA,EAAQC,IAAM,GAA/BzB,EAAAA,EAAAA,OAAQ0B,EAAAA,EAAAA,KACZ1B,GAAAA,EAAOJ,GAAO,OAAOiC,OAAOC,OAAO,GAAIF,EAAOF,EAAKE,EAAOnB,IAEzDmB,OAAAA","file":"lib.map","sourceRoot":"../src","sourcesContent":["export const createAction = (type, fn = v => v) => {\n  const builder = (...args) => ({\n    payload: fn(...args),\n    type\n  });\n\n  const isType = t => t === type;\n\n  builder.case = (cb = v => v) => ({\n    exec: (...p) => cb(...p),\n    isType\n  });\n\n  builder.isType = isType;\n  builder.type = type;\n  return builder;\n};\n\nexport const createAsyncAction = (type, fn = v => v) => {\n  const loading = createAction(`${type}_LOADING`);\n  const success = createAction(`${type}_SUCCESS`);\n  const failure = createAction(`${type}_FAILURE`);\n  const thunk = (...payload) => dispatch => {\n    dispatch(loading(...payload));\n\n    return Promise.resolve()\n      .then(() => fn(...payload))\n      .then(res => dispatch(success(res)))\n      .catch(err => dispatch(failure(err)));\n  };\n\n  thunk.reducer = createReducer({}, [\n    loading.case((_, payload) => ({ loading: true, error: \"\", data: null })),\n    success.case((_, data) => ({ loading: false, error: \"\", data })),\n    failure.case((_, err) => ({ loading: false, error: err && err.message }))\n  ]);\n\n  thunk.loading = loading;\n  thunk.success = success;\n  thunk.failure = failure;\n\n  return thunk;\n};\n\nexport const handleAction = (...actions) => ({ type, payload } = {}) => {\n  for (const i in actions) {\n    const { isType, exec } = actions[i] || {};\n    if (isType(type)) {\n      return exec(payload);\n    }\n  }\n};\n\nexport const createReducer = (initial, actions) => {\n  return (state = initial, { type, payload } = {}) => {\n    for (const i in actions) {\n      const { isType, exec } = actions[i] || {};\n      if (isType(type)) return Object.assign({}, state, exec(state, payload));\n    }\n    return state;\n  };\n};\n"]}